<?xml version="1.0"?>
<!-- Sample build file used to retrieve svnant's sources -->
<project name="svn-test" basedir="." default="get_project">
  
  <!-- path to the svnant libraries. Usually they will be located in ANT_HOME/lib -->
  <property name="lib.dir">lib</property>
  <path id="ant.classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>  

  <!-- SVNANT task 설정 파일 -->
  <taskdef classpathref="ant.classpath" resource="org/tigris/subversion/svnant/svnantlib.xml"/>

  <!--  all properties, not use build.properties --> 
  <property name="checkout.dir">D:/CCHRPYTMBN/BACK_SKCC_PTBHR_WEB</property>
  <property name="updatefile.dir">D:/CCHRPYTMBN/BACK_WEB</property>
  <property name="checkout.dir2">D:/CCHRPYTMBN/BACK_SKCC_PTBHR_MOBILE</property>
  <property name="updatefile.dir2">D:/CCHRPYTMBN/BACK_MOBILE</property>

  <property name="svn.url">http://mysvn.skcc.com/svn/SKCC/CCHRPYTMBN/SKCC_PTBHR_WEB/</property>
  <property name="svn.url2">http://mysvn.skcc.com/svn/SKCC/CCHRPYTMBN/SKCC_PTBHR_MOBILE/</property>
  <property name="svn.user.id">319883</property>
  <property name="svn.user.pw">sisparang1!</property>

  <!-- Option Configuration -->
  <tstamp>
  <!-- locale="en,US" offset="-3" unit="hour" /> -->
  <!--현재 날짜 -->
      <format property="TODATE" pattern="yyyyMMddhh" />
      <format property="TIMESTAMP1" pattern="MM/dd/yyyy hh:mm aaa"
              locale="en,US" offset="-1" unit="hour" />
  </tstamp>
  <property name="checkout.dir.todate" location="${checkout.dir}/${TODATE}" />
  
  <!-- svn -->
  <!-- 사용시 부르는 target으로, svn 관련 작업을 수행한다.
          만약 이미 checkout 했다면 update 를, 그렇지 않다면 checkout 한다.  -->
  <target name="get_project" depends="svn_checkout,svn_update">
    <copy toDir="${updatefile.dir}"
          verbose="true"
          overwrite="true">
      <fileset dir="${checkout.dir}" casesensitive="yes"> 
        <include name="**/*.*"/>
        <exclude name="**/license.*" />
        <exclude name="**/common/daumeditor/**/*.*" />
        <exclude name="**/common/froalaeditor/**/*.*" />
        <exclude name="**/common/ibchart/**/*.*" />
        <exclude name="**/common/iborg/**/*.*" />
        <exclude name="**/common/icon/**/*.*" />
        <exclude name="**/common/webfont/**/*.*" />
        <exclude name="**/IBOrg/**/*.*" />
        <exclude name="**/IBOrgSmp/**/*.*" />
        <exclude name="**/resource/**/*.*" />
        <exclude name="**/resources/**/*.*" />
        <exclude name="**/WEB-INF/**/*.*" />
        <exclude name="**/adj/**/*.*" />
        <exclude name="**/ya_adj/**/*.*" />
        <exclude name="**/.settings/**/*.*" />
        <exclude name="**/.externalToolBuilders/**/*.*" />
        <exclude name="**/build/**/*.*" />
        <exclude name="**/libs/**/*.*" />
        <exclude name="**/db/**/*.*" />
        <exclude name="**/file/**/*.*" />
        <exclude name="**/log.jsp" />
        <exclude name="**/log4j.lcf" />
        <date datetime="${TIMESTAMP1}" when="after"/>
      </fileset>
    </copy>
    <echo message="File Copy1 [Finished : ${TIMESTAMP1}]" />
    <copy toDir="${updatefile.dir2}"
          verbose="true"
          overwrite="true">
      <fileset dir="${checkout.dir2}" casesensitive="yes"> 
        <include name="**/*.*"/>
        <exclude name="**/license.*" />
        <exclude name="**/common/daumeditor/**/*.*" />
        <exclude name="**/common/froalaeditor/**/*.*" />
        <exclude name="**/common/ibchart/**/*.*" />
        <exclude name="**/common/iborg/**/*.*" />
        <exclude name="**/common/icon/**/*.*" />
        <exclude name="**/common/webfont/**/*.*" />
        <exclude name="**/IBOrg/**/*.*" />
        <exclude name="**/IBOrgSmp/**/*.*" />
        <exclude name="**/resource/**/*.*" />
        <exclude name="**/resources/**/*.*" />
        <exclude name="**/WEB-INF/**/*.*" />
        <exclude name="**/adj/**/*.*" />
        <exclude name="**/ya_adj/**/*.*" />
        <exclude name="**/.settings/**/*.*" />
        <exclude name="**/.externalToolBuilders/**/*.*" />
        <exclude name="**/build/**/*.*" />
        <exclude name="**/libs/**/*.*" />
        <exclude name="**/db/**/*.*" />
        <exclude name="**/file/**/*.*" />
        <exclude name="**/log.jsp" />
        <exclude name="**/log4j.lcf" />
        <date datetime="${TIMESTAMP1}" when="after"/>
      </fileset>
    </copy>
    <echo message="File Copy2 [Finished : ${TIMESTAMP1}]" />
  </target>

  <!-- checkout 폴더 존재여부를 확인하여 update할지, checkout 할지 판단한다 -->
  <target name="check_export_empty">
    <available file="${checkout.dir}" property="svn_export.exists"/>
  </target>

  <!-- 만약 checkout 폴더가 없다면, checkout한다 -->
  <target name="svn_checkout" depends="check_export_empty" unless="svn_export.exists">
    <echo message="Checkout Excute" />
    <svn username="${svn.user.id}" password="${svn.user.pw}" svnkit="true" javahl="false">
      <checkout url="${svn.url}"  destPath="${checkout.dir}" />
      <checkout url="${svn.url2}"  destPath="${checkout.dir2}" />
    </svn>
  </target>

  <!-- 만약 checkout 폴더가 있다면, update한다 -->
  <target name="svn_update" if="svn_export.exists">
    <svn username="${svn.user.id}" password="${svn.user.pw}" svnkit="true" javahl="false">
      <update dir="${checkout.dir}" recurse="true"/>
      <update dir="${checkout.dir2}" recurse="true"/>
    </svn>   
    <echo message="SVN Update [Finished : ${TIMESTAMP1}]" />
  </target>

</project>
